/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dbca;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author seabirds
 */
public class L3ItemSetFrame extends javax.swing.JFrame {

    /**
     * Creates new form L3ItemSetFrame
     */
    MainFrame mf;
    SkipFrame sf;
    ArrayList fList1=new ArrayList();
    
    public L3ItemSetFrame(MainFrame me,SkipFrame se) 
    {
        mf=me;
        sf=se;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel1.setText("Large 3- Item Set");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Cambria Math", 0, 17)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Cambria Math", 0, 17)); // NOI18N
        jButton1.setText("Approximate Count");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jButton1)))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            System.out.println("comunt "+mf.icnt+" : "+mf.icnt1);
            //for(int h=3;h<mf.icnt1;h++)
            //{
              //  System.out.println("=======   "+h+" Item Set");
                
                // Three Item Set
            
            String res="";
            if(mf.icnt>=3)
            {
                
                ArrayList tval1=FindNItems(2,3);
                ArrayList items=mf.itemSet[2]; // Get Items 
                for(int i=0;i<items.size();i++)
                {
                    String g1=items.get(i).toString();
                    String g2[]=g1.split("#");
                    ArrayList a1=mf.itemSetCount[0];
                    ArrayList a2=mf.itemSetCount[1];
                    int k1=0;
                    int k2=0;
            
                    for(int y1=0;y1<g2.length;y1++)
                    {
                        for(int j=0;j<a1.size();j++)
                        {
                            String g3=a1.get(j).toString();
                            String g4[]=g3.split("#");
                            if(g3.startsWith(g2[y1]))
                            {
                                // System.out.println(g3+" : "+g2[y1]);
                                k1=k1+Integer.parseInt(g4[g4.length-1]);
                            }
                            
                        }
                    }
            
            
                    for(int y1=0;y1<g2.length;y1++)
                    {
                        String gs=g2[y1];
                        for(int y2=y1+1;y2<g2.length;y2++)
                        {
                            String  gs1=gs+"#"+g2[y2];
                            for(int j=0;j<a2.size();j++)
                            {
                                String g3=a2.get(j).toString();
                                String g4[]=g3.split("#");
                                //System.out.println("-----------"+g3+" : "+gs1);
                                if(g3.startsWith(gs1))
                                {
                                    // System.out.println(g3+" : "+gs1);
                                    k2=k2+Integer.parseInt(g4[g4.length-1]);
                                }
                            
                            }
                        }
                        
                    }
                    
                    double e1=Double.parseDouble(tval1.get(0).toString());
                    double e2=Double.parseDouble(tval1.get(1).toString());
                    System.out.println(e1+"*"+k1+" : "+e2+"*"+k2+ " :  "+g1);
                    //double e=(e1*k1)-(e2*k2);
                    double e=(e1*k1)+(e2*k2);
                    System.out.println("re "+e);
                    
                    ArrayList a3=mf.itemSetCount[2];    
                    int k3=k1-k2;
            
                    System.out.println("k3 "+(k1-k2)) ;
                    System.out.println(e-k3) ;
       
                    res=res+g1+" :  "+(e-k3)+"\n\n";
                }
                
                
                if(mf.icnt>=4)
                {
                   FindCount fc=new FindCount(mf);
				System.out.println(".........");
                   res=res+fc.getApp(3, 4);
                }
                AppCountFrame af=new AppCountFrame(mf,sf,fList1);
                af.setTitle("Approximate Count");
                af.setVisible(true);
                af.setResizable(false);
                af.jTextArea1.setText(res);
                
                
                
            } // if      
            else
            {
                JOptionPane.showMessageDialog(this,"Data Set Contains only 2 item set");
            }
                
            //}
            /*String txt="";
            ArrayList at1=new ArrayList();
            ArrayList at2=new ArrayList();
            
            for(int i=0;i<sf.it3.size();i++)
            {
                String g1=sf.it3.get(i).toString();
                int k1=0;
                int k2=0;
                String sg1="";
                String sg2="";
                System.out.println("----> "+g1);
        //        txt=txt+"\n"+g1+"\n";
                for(int j=0;j<sf.it1.size();j++)
                {
                    String g2=sf.it1.get(j).toString();
                    if(g1.contains(g2))
                    {
                        k1=k1+Integer.parseInt(sf.itc1.get(j).toString());
                        sg1=sg1+g2+" , ";
                        System.out.println(g2+" : "+sf.itc1.get(j).toString());
                  }
                }
                for(int j=0;j<sf.it2.size();j++)
                {
                    String g2=sf.it2.get(j).toString();
                    //char ch[]=g2.toCharArray();
                    String ch[]=g2.split("#");
                    if(g1.contains(String.valueOf(ch[0])) && g1.contains(String.valueOf(ch[1])))
                    {
                        k2=k2+Integer.parseInt(sf.itc2.get(j).toString());
                        sg2=sg2+g2+" , ";
                        System.out.println(g2+" : "+sf.itc2.get(j).toString());
                    }
                }
               // txt=txt+sg1+" : "+k1+"\n";
                //txt=txt+sg2+" : "+k2+"\n";
                System.out.println(" L3  --->  "+g1+" :  "+k1+" : "+k2);
                at2.add(sg1+" : "+k1+"\n"+sg2+" : "+k2);
                //at1.add(g1+"#"+k1+"#"+k2);
                at1.add(g1+"@"+k1+"@"+k2);
            }
            
            
            String s1="";
            
            for(int i=0;i<at1.size();i++)
            {
                //String g1[]=at1.get(i).toString().split("#");
                String g1[]=at1.get(i).toString().split("@");
                double d1=Double.parseDouble(g1[1]);
                double d2=Double.parseDouble(g1[2]);
                
                double val=(0.857-1)*d1+(-0.571+1)*d2;
                DecimalFormat df=new DecimalFormat("#.##");
                String apc=df.format(val);
                System.out.println(g1[0]+" : "+val+" : "+apc);
                s1=s1+g1[0]+" : "+apc+"\n";
                s1=s1+at2.get(i)+"\n\n";
                if(Double.parseDouble(apc)>3)
                    fList1.add(g1[0]+" : "+apc);
            }
            
             AppCountFrame af=new AppCountFrame(mf,sf,fList1);
            af.setTitle("Approximate Count");
            af.setVisible(true);
            af.setResizable(false);
            af.jTextArea1.setText(s1);*/
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

   static int fact(int val)
   {
	int fa=1;
	for(int i=1;i<val;i++)
	{
            fa+=i;
	}
	//System.out.println("fact "+fa);
        return fa;
    }
   
   public ArrayList FindNItems(int k,int m)
   {
       ArrayList lt1=new ArrayList();
       try
       {
           ArrayList aij=new ArrayList();
            ArrayList ti=new ArrayList();
            int aijVal[][]=new int[m][m];
            for(int i=1;i<m;i++)
            {
                for(int j=1;j<m;j++)
                {
                    System.out.println(i+" : "+j)	;
                    double val=0;
                    if(j>=i)
                    {				
                        val=Math.pow(-1,(i+j));
                        int f1=fact(i);
                        int f2=fact(j);
                        int f3=fact(j-1);
			
                        int kk=f2/(f1*f3);
                        int a=(int)val*kk;
                        System.out.println(i+":"+j+"--->compute ncr : "+a);
                        aij.add(a);
                        aijVal[i][j]=a;
                    }
                    if(j<i)
                    {
                        System.out.println(i+":"+j+"--->0");
                        aij.add("0");
                        aijVal[i][j]=0;
                    }
		 }
			
                 double w1=(-(m+1))/(m-1);
                 double w2=(-(m+1))/(m-1);
                 w2=w2*w2;
                 w2=Math.sqrt(w2-1);
                 double d1=Math.pow((w1+w2),k);
                 double d2=Math.pow((w1-w2),k);
                 double d=d1+d2;
                 double t=1+Math.pow(-1,i)*(2/d);
                 System.out.println("-------- t "+i+" = "+t);
                 ti.add(t);
            }
		
		
            System.out.println(aij+ " : "+ti);
	
	
            for(int i=1;i<aijVal.length;i++)
            {
		for(int j=1;j<aijVal.length;j++)
		{
			System.out.println(aijVal[j][i]+" : "+ti.get(j-1));
		}
		System.out.println("------");
            }
            
            
            for(int i=1;i<aijVal[0].length;i++)
            {
		double d1=0;
		for(int j=1;j<aijVal.length;j++)
		{
                    //System.out.println(aijVal[j][i]+" : "+ti.get(j-1));
                    d1=d1+(aijVal[j][i]*Double.parseDouble(ti.get(j-1).toString()));			
		}
		lt1.add(d1);
		//System.out.println("------");
            }	
            System.out.println(lt1);
            
       }
       catch(Exception e)
       {
           e.printStackTrace();
       }
       return lt1;
   }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(L3ItemSetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(L3ItemSetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(L3ItemSetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(L3ItemSetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new L3ItemSetFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
