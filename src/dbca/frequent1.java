/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dbca;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author ETPL_CH_01
 */
public class frequent1 extends javax.swing.JFrame {

    Statement st, st1, st2;
    Connection con;
    ArrayList al = new ArrayList();
   ArrayList al1=new ArrayList();
   static int vr1=split.vr1;
    /**
     * Creates new form frequent
     */
    public frequent1() {
        initComponents();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbca", "root", "");
            st = con.createStatement();
            st1 = con.createStatement();
            st2 = con.createStatement();
            st.executeUpdate("truncate table van");
            st.executeUpdate("truncate table frequent");
            st.executeUpdate("truncate table van1");
            st.executeUpdate("truncate table frequent1");
            al.clear();
            al1.clear();
        } catch (ClassNotFoundException | SQLException e) {
            System.err.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Compute Frequency");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
//            for(int i=3;i<10;)
//            {
            ResultSet rs = st.executeQuery("select * from batchfinal");
            while (rs.next()) {
                String var = rs.getString(1);
                StringTokenizer str = new StringTokenizer(var, "#");
                int length = str.countTokens();
                System.out.println(var + "count for var " + length);
                st1.executeUpdate("insert into van values('" + var + "','" + length + "')");
//              while(str.hasMoreTokens())
//              {
//                  
//              }
//            }
//          i++;
            }
            ResultSet rs2 = st.executeQuery("select distinct length from van order by length asc ");
            while (rs2.next()) {
//                String var=rs.getString(1);
                String var1 = rs2.getString(1);
                System.out.println(var1);
                al.add(var1);
            }
            for (int i = 0; i < al.size(); i++) {
                System.out.println(al.get(i));
                jTextArea1.append("                    Frequency " + al.get(i) + "subsets \n                   -----------------------------\n");
                ResultSet rs1 = st.executeQuery("select * from van where length='" + al.get(i).toString() + "'");
                int value = 0;
                String var = null, var2 = null;
                while (rs1.next()) {

                    var = rs1.getString(1);
                    var2 = rs1.getString(2);
                    System.out.println(var + "->" + var2);
                    value += Integer.parseInt(var2);
                    jTextArea1.append(var + "->" + var2 + "\n");

                }
                st.executeUpdate("insert into frequent values ('" + var + "','" + var2 + "','" + value + "')");
                jTextArea1.append("total count is " + value + "\n");
                jTextArea1.append("-------------------------------------\n");
            }
//             ResultSet rs4 = st.executeQuery("select * from batch4 ");
//            while (rs4.next()) {
//                String var = rs4.getString(1);
//                StringTokenizer str = new StringTokenizer(var, "#");
//                int length = str.countTokens();
//                System.out.println(var + "count for var " + length);
//                st1.executeUpdate("insert into van1 values('" + var + "','" + length + "')");
////              while(str.hasMoreTokens())
////              {
////                  
////              }
//            }
//            ResultSet rs3 = st.executeQuery("select distinct length from van1 order by length asc ");
//            while (rs3.next()) {
////                String var=rs.getString(1);
//                String var1 = rs3.getString(1);
//                System.out.println(var1);
//                al1.add(var1);
//            }
//            for (int i = 0; i < al1.size(); i++) {
//                System.out.println(al1.get(i));
//                jTextArea2.append("                    Frequency " + al1.get(i) + "subsets \n                   -----------------------------\n");
//                ResultSet rs1 = st.executeQuery("select * from van1 where length='" + al1.get(i).toString() + "'");
//                int value = 0;
//                String var = null, var2 = null;
//                while (rs1.next()) {
//
//                    var = rs1.getString(1);
//                    var2 = rs1.getString(2);
//                    System.out.println(var + "->" + var2);
//                    value += Integer.parseInt(var2);
//                    jTextArea2.append(var + "->" + var2 + "\n");
//
//                }
//                st.executeUpdate("insert into frequent1 values ('" + var + "','" + var2 + "','" + value + "')");
//                jTextArea2.append("total count is " + value + "\n");
//                jTextArea2.append("-------------------------------------\n");
//            }
            JOptionPane.showMessageDialog(null, "Frequent itemsets value computed ");
        } catch (SQLException | HeadlessException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int frequency1 = 0, frequency2 = 0;
            double frequency3 = 0, frequency4 = 0, frequency5 = 0, frequency6, frequentintersect;
            for (int i = 0; i < al.size(); i++) {
                System.out.println(al.get(i));
                jTextArea1.append("Frequency " + al.get(i) + " subsets\n");
                ResultSet rs = st.executeQuery("select * from frequent where length ='" + al.get(i).toString() + "'");
                while (rs.next()) {
                    String var = rs.getString(2);
                    String frequencydata = rs.getString(3);
                    System.out.println(var + "->" + frequencydata);
                    switch (var) {
                        case "1":
                            frequency1 = Integer.parseInt(frequencydata);
                            jTextArea1.append(" Frequency for subset 1 is " + frequency1 + "\n");
                            break;
                        case "2":
                            frequency2 = Integer.parseInt(frequencydata);
                            jTextArea1.append(" Frequency for subset 2 is " + frequency2 + "\n");
                            break;
                        case "3": {
                            double fre;
                            fre = ((0.854176 * frequency1) - (0.571429 * frequency2));
                            if (frequency1 > frequency2) {
                                double frequenintersect = fre * (frequency1 - frequency2);
                                frequency3 = Math.abs(frequenintersect);
                            } else {
                                frequentintersect = fre * (frequency2 - frequency1);
                                frequency3 = Math.abs(frequentintersect);
                            }
                            jTextArea1.append(" Frequency for subset 3 is " + frequency3 + "\n");
                            break;
                        }
                        case "4": {
                            double fre;
                            fre = ((1.073972551 * frequency1) - (1.221917654 * frequency2) + (1.51780786 * frequency3));
                            frequency4 = Math.abs(fre - (frequency1 - frequency2 + frequency3));
                            jTextArea1.append(" Frequency for subset 4 is " + frequency4 + "\n");
                            break;
                        }
                        case "5": {
                            double fre;
                            fre = ((1.073972551 * frequency1) - (1.221917654 * frequency2) + (1.51780786 * frequency3) - (1.56789765 * frequency4));
                            frequency5 = Math.abs(fre - (frequency1 + frequency2 - frequency3 - frequency4));
                            jTextArea1.append(" Frequency for subset 5 is " + frequency5 + "\n");
                            break;
                        }
                        case "6": {
                            double fre;
                            fre = ((1.073972551 * frequency1) - (1.221917654 * frequency2) + (1.51780786 * frequency3) - (1.56789765 * frequency4) + (1.5647875498 * frequency5));
                            frequency6 = Math.abs(fre - (frequency1 + frequency2 - frequency3 - frequency4 + frequency5));
                            jTextArea1.append(" Frequency for subset 6 is " + frequency6 + "\n");
                            break;
                        }
                        default:
                            jTextArea1.append(" No frequency obtained \n");
                            break;
                    }

                }
            }
//             for (int i = 0; i < al1.size(); i++) {
//                System.out.println(al1.get(i));
//                jTextArea2.append("Frequency " + al1.get(i) + " subsets\n");
//                ResultSet rs = st.executeQuery("select * from frequent where length ='" + al1.get(i).toString() + "'");
//                while (rs.next()) {
//                    String var = rs.getString(2);
//                    String frequencydata = rs.getString(3);
//                    System.out.println(var + "->" + frequencydata);
//                    switch (var) {
//                        case "1":
//                            frequency1 = Integer.parseInt(frequencydata);
//                            jTextArea2.append(" Frequency for subset 1 is " + frequency1 + "\n");
//                            break;
//                        case "2":
//                            frequency2 = Integer.parseInt(frequencydata);
//                            jTextArea2.append(" Frequency for subset 2 is " + frequency2 + "\n");
//                            break;
//                        case "3": {
//                            double fre;
//                            fre = ((0.854176 * frequency1) - (0.571429 * frequency2));
//                            if (frequency1 > frequency2) {
//                                double frequenintersect = fre * (frequency1 - frequency2);
//                                frequency3 = Math.abs(frequenintersect);
//                            } else {
//                                frequentintersect = fre * (frequency2 - frequency1);
//                                frequency3 = Math.abs(frequentintersect);
//                            }
//                            jTextArea2.append(" Frequency for subset 3 is " + frequency3 + "\n");
//                            break;
//                        }
//                        case "4": {
//                            double fre;
//                            fre = ((1.073972551 * frequency1) - (1.221917654 * frequency2) + (1.51780786 * frequency3));
//                            frequency4 = Math.abs(fre - (frequency1 - frequency2 + frequency3));
//                            jTextArea2.append(" Frequency for subset 4 is " + frequency4 + "\n");
//                            break;
//                        }
//                        case "5": {
//                            double fre;
//                            fre = ((1.073972551 * frequency1) - (1.221917654 * frequency2) + (1.51780786 * frequency3) - (1.56789765 * frequency4));
//                            frequency5 = Math.abs(fre - (frequency1 + frequency2 - frequency3 - frequency4));
//                            jTextArea2.append(" Frequency for subset 5 is " + frequency5 + "\n");
//                            break;
//                        }
//                        case "6": {
//                            double fre;
//                            fre = ((1.073972551 * frequency1) - (1.221917654 * frequency2) + (1.51780786 * frequency3) - (1.56789765 * frequency4) + (1.5647875498 * frequency5));
//                            frequency6 = Math.abs(fre - (frequency1 + frequency2 - frequency3 - frequency4 + frequency5));
//                            jTextArea2.append(" Frequency for subset 6 is " + frequency6 + "\n");
//                            break;
//                        }
//                        default:
//                            jTextArea2.append(" No frequency obtained \n");
//                            break;
//                    }
//
//                }
//            }
JOptionPane.showMessageDialog(null," Frequent item subsets showed");
        } catch (SQLException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 System.exit(0);     
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frequent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frequent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frequent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frequent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frequent1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
