/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dbca;

import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ETPL_CH_01
 */
public class nextwindow extends javax.swing.JFrame {
Statement st,st1,st2;
     Connection con;
//     public static int finalcutvalue=computation.finalcutvalue;
      public static int finalcutvalue=5;
     static ArrayList al=new ArrayList();
     static ArrayList al1=new ArrayList();
//     static int vr1=split.vr1;
     static int vr1=100;
    /**
     * Creates new form nextwindow
     */
    public nextwindow() {
        initComponents();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbca", "root", "");
            st = con.createStatement();
            st1 = con.createStatement();
            st2=con.createStatement();
           
        st.executeUpdate("truncate table batch3");
        st.executeUpdate("truncate table app");
        st.executeUpdate("truncate table app1");
        st.executeUpdate("truncate table batch4");
        st.executeUpdate("truncate table batch5");
        st.executeUpdate("truncate table batch6");
     //   st.executeUpdate("truncate table batch7");
      //  st.executeUpdate("truncate table batch8");
       // st.executeUpdate("truncate table batch9");
        //st.executeUpdate("truncate table batch10");
        st.executeUpdate("truncate table compute");
        
        } catch (ClassNotFoundException | SQLException e) {
            System.err.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Batch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Overload ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EOP", "COP", "AOP" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jComboBox1, 0, 132, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

@SuppressWarnings("empty-statement")
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   try
   {
       int start=21;
       int start1=31;
        int j = 0;
        int i,k;
      int windowmaxsize=10;
//      int m=
      for( i=3;i<(vr1/10);)
      {
          System.out.println("ivalue"+i);
          
           PrintWriter pw = new PrintWriter(new File("./batch/batch"+i+".txt"));
//          {
               j=10-finalcutvalue;
     //          String query="select * from home where  tid between "+ start + " \t and \t " + (j*windowmaxsize);
     //          System.out.println(query);
               String word=" select * from home where  tid between "+ start + " \t and \t " + ((i*windowmaxsize));
               System.out.println(word);
                 ResultSet rs=st.executeQuery(word );
                 jTextArea1.append(" Batch"+i+" enters in window1 \n");
//                 System.out.println("batch" + i +"enters into window1");
                 while(rs.next())
                 {
                     int b=1;
                     String s1=rs.getString(2);
                     jTextArea1.append(s1 + "\n");
                     System.out.println(s1 + "\n");
                     pw.write( s1+ "\n");
                     al.add(s1);
                     System.out.println("insert into batch"+i +"values('" + (b++) +"','" +s1 +"','" +"  "+"')");
                     st1.executeUpdate("insert into batch"+i +"\tvalues('" + (b++) +"','" +s1 +"','" +"  "+"')");
                   
                      
                 }
                    JOptionPane.showMessageDialog(null," Batch "+i+"  entered into windows");
                 jTextArea1.append("-----------------------------------------------------------");
                 computation1 comp=new computation1();
                      comp.compute("batch"+i);
                      comp.netvalue("batch"+i);
//           } 
            start=(i*windowmaxsize)+11;
           i=i+2;
          
      }
      
      for( k=4;k<=(vr1/10) ;)
      {
          System.out.println("kvalue"+k);
          PrintWriter pw = new PrintWriter(new File("./batch/batch"+i+".txt"));
          
          j=10-finalcutvalue;
          start=start+windowmaxsize;
          System.out.println("ghtgh"+start1);
            ResultSet rs=st.executeQuery(" select * from home where  tid between "+ start1 + " \t and \t " + ((k*windowmaxsize)) );
//            jTextArea2.append(" Batch "+k+ "enters in window2  \n");
            while(rs.next())
            {
                int b=1;
                String s1=rs.getString(2);
                jTextArea2.append(s1 + "\n");
                pw.write(s1 +"\n");
                al1.add(s1);
                st1.executeUpdate("insert into batch"+k +"\tvalues('" + (b++) +"','" +s1 +"','" +"  "+"')");
                st2.executeUpdate("insert into batchfinal values('" +s1 +"')");
            }
            JOptionPane.showMessageDialog(null," Batch "+k+"  entered into windows");
                 jTextArea2.append("-----------------------------------------------------------");
                 computation1 comp=new computation1();
                      comp.compute("batch"+k);
                      comp.netvalue("batch"+k);
          
            start1=(k*windowmaxsize)+11;
            k=k+2;
            System.out.println("final k value" +k);
      }
//      JOptionPane.showMessageDialog(null," Batch "+i+" and Batch"+k+" entered into windows");
      JOptionPane.showMessageDialog(null,finalcutvalue + " values are entered into the batch" );
      JOptionPane.showMessageDialog(null,"  Occurence of data Overload");
    
//    jTextArea1.append(" \n \n -------------------------------------------------------- \n");
//    jTextArea2.append(" \n \n --------------------------------------------------------\n");
//      computation1 com=new computation1();
//      com.cutvalue();
       
   }
   catch(SQLException | HeadlessException e)
   {
       System.out.println(e.getMessage());
   } catch (FileNotFoundException ex) {
        Logger.getLogger(nextwindow.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(nextwindow.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try
       {
           for(int i=3;i<=(vr1/10);i++)
           {
               ResultSet rs=st.executeQuery("select * from batch"+i  );
               while(rs.next())
               {
                   String strin=rs.getString(2);
//                   String val=(String) al.get(i);
               StringTokenizer str=new StringTokenizer(strin,"#");
               int value=str.countTokens();
//               st.executeUpdate("insert into batch3 values('" + val + "','" +value + "')");
               String query="update batch"+i +"\tset count='" + value +"' where string='"+strin+"'";
               System.out.println(query);
               st1.executeUpdate( query);
               }
           }
//            for(int i=0;i<al.size();i++)
//           {
//               String val=(String) al.get(i);
//               StringTokenizer str=new StringTokenizer(val,"#");
//               int value=str.countTokens();
//               st.executeUpdate("insert into batch3 values('" + val + "','" +value + "')");
//               
////               while(str.hasMoreTokens())
////               {
////                   String vat=str.nextToken()
////               }
//           }
//             for(int i=0;i<al1.size();i++)
//           {
//               String val=(String) al1.get(i);
//               System.out.println(val +"\n");
//               StringTokenizer str=new StringTokenizer(val,"#");
//               int value=str.countTokens();
//               st.executeUpdate("insert into batch4 values('" + val + "','" +value + "')");
//               
////               while(str.hasMoreTokens())
////               {
////                   String vat=str.nextToken()
////               }
//           }
           String var=jComboBox1.getSelectedItem().toString();
           switch (var) {
               case "EOP":
                   new lca().setVisible(true);
                   break;
               case "COP":
                   new cop().setVisible(true);
                   break;
               case "AOP":
                   new aop().setVisible(true);
                   break;
               default:
                   JOptionPane.showMessageDialog(null,"Select an mechanism ");
                   break;
           }
       }
       catch(Exception e)
       {
           System.out.println(e.getMessage());
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(nextwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(nextwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(nextwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(nextwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new nextwindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
